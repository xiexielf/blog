<!DOCTYPE html>
<html lang="zh">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<title>如果要学习web前端开发，需要学习什么？</title>
		<link rel="stylesheet" type="text/css" href="/stylesheets/bootstrap.min.css" />
		<link rel="stylesheet" type="text/css" href="/stylesheets/style.css" />
	</head>

	<body>
		<%- include('header.ejs') %>
		<div class="container">
			<div class="row">
				<!--asider-->
				<%- include('asider.ejs') %>
				<!--article-->
				<div class="col-sm-9 blog-main">
					<article class="blog-post">
						<h3 class="blog-post-title">如果要学习web前端开发，需要学习什么？</h3>
						<p class="blog-post-meta">2017-06-10
							<a href="/about">谢利豪</a>
						</p>
						<hr />
						<p>遇到很多新手，都会问，如果要学习web前端开发，需要学习什么？难不难？多久能入门？怎么能快速建一个网站？工资能拿到多少？还有些让我推荐一些培训机构什么的要去学习。我建议是自学，实在是觉得自己没有这个能力，确实是需要一个老师的话，那你还是自己做主找个老师吧！为什么要自学呢，现在的老师水平都可以说是参差不平，运气好，你遇到个好老师，把毕生的经验和技巧都教给了你，运气不好，遇到个照本宣科的老师，那你的知识也会仅仅局限于教材！也许还有更糟糕的是，学到的书本知识两年前就已经开始有了大的变化，你并不知道关于更多的web设计这方面的知识。如果在这样的情况下，都还不如那些闭关自学的学生。</p>
						<p>学习最好的老师就是兴趣，没有兴趣而言，这条路我相信你是走不长远的，除非你有其他比如说生活压力，工作压力等让你不得不这样坚持下去。我刚开始接触web网页设计的时候，教材都是以table来布局的，看到插入table生成了很多标签代码后，tr里面一个个td，理不清楚这个里面怎么回事。敷衍的学习了一个学期。还是没学到什么。真正学到的还是停留在怎么新建，怎么保存。</p>
						<p>如果你还是在校学生，那你得好好上课，大学的教材普遍来讲都是知识面浅的。虽然很多知识看起来用处不大，学起来也很枯燥，让你觉得浪费时间。但这些书本上最基础的知识你都不能掌握，那你以后怎么追求更精湛的技术呢。所以不要逃课，把基础知识掌握了，别小看这个基础知识，它非常重要，基础扎实是否也会决定你在一个职业能走多远。</p>
						<p>我是毕业了后从文员转到编辑再到技术员当然这期间工资就像是阶梯一样，虽然这差距也不是很大，都离不开那些曾经被我遗落角落的专业课本。生活上的压力迫使我这样做，我知道自己要什么，当一个文员没有追求，感觉过着30、40岁人的生活，接电话、发email、整理报表，每个月都有白领的工资...浪费的不仅仅是自己的青春，还有这大学几年昂贵的学费。后来就愈来愈想掌握一门技术，想去培训学校学习一段时间，但是现实是我没有钱，闭关一个星期，重拾课本，再看看那些讨厌的table，虽然out了，但是确实会发现很多基础再基础不过的东西，利用互联网，不明白的就百度，作为一个过来人，我觉得我自己走了不少弯路，所以，有必要提醒你们一下，一定要明确自己的目标，摆正自己的位置，最好掌握一门技术。</p>
						<h4>了解web前端</h4>
						<p>Web前端开发是从网页制作演变而来的，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是Web1.0时代产物，那时网站的主要内容是静态的，用户使用网站的行为也以浏览为主。2005年以后，互联网进入Web2.0时代，各种类似桌面软件的Web应用大量涌现，网站的前端由此发生了翻天覆地的变化。网页不再只是承载单一的文字和图片，各种富媒体让网页的内容更加生动，网页上软件化的交互形式为用户提供了更好的使用体验，这些都是基于前端技术实现的。说得直白点就是美工photoshop，交互设计，flash，js，html+css。就小规模公司而言，一个技术员都得会这几样技能，这样很锻炼人的，慢慢的你就会成为公司的主力。大规模的公司把这些分得很细，所以，你可以精通一门，熟悉其他的，进军大公司。</p>
						<h4>网页开发工具</h4>
						<p>学习web前端开发，网页开发工具有FrontPage，会用 Word 的人很容易学会FrontPage。还有一个常用的是Dreamweaver。这两种都是使用最多的HTML网页制作工具，我使用的是Dreamweaver cs6,因为这套软件提供了一套直观的可视界面，融合了html5一些新的内容。包括网格布局什么的。</p>
						<h4>学习内容</h4>
						<p>HTML、CSS和JavaScript。html是内容，css是表现，javascript是行为。前端开发的门槛其实非常低，与服务器端语言先慢后快的学习曲线相比，前端开发的学习曲线是先快后慢。所以，对于从事IT工作的人来说，前端开发是个不错的初入点。也正因为如此，前端开发的领域有很多自学成“才”的同行。html是最基础的，现在流行的是html5设计，先学会网页布局。css是用来美化html页面的为页面提供布局和格式。最后再学javascript。如果你把每天看电影、看电视剧的时间用来学习，我想一个星期入门是没有问题的。</p>
						<p>基础知识：</p>
						<p>1. html + css。这部分建议在 www.w3school.com.cn 上学习，边学边练，每章后还有小测试。之后可以模仿一些网站做些页面。本站提供的个人博客模板www.yangqq.com/download/都是比较简单的单页，可以下载下来模仿自己做一个。理解css每个元素的属性，样式的实现不一定只有一种写法，多想一想还有没有什么需要改进的地方。</p>
						<p>2、JavaScript。不是所有的网页都必须有js，但是要想实现一些超酷的功能和界面的时候，就需要涉及到js。如果没有其他编程语言的基础的话，学起来可能要费些力，还是建议先在 w3school上学习。之后建议马上看《javascript语言精粹》</p>
						<p>3、Photoshop、flash。熟悉会一点儿就行了，没必要全部都学得精通，当然如果你在学习的过程中，发现你ps或者flash比较感兴趣的话，也可以尝试做美工这一行。</p>
						<p>4、html5和css3。可以先了解一下，然后再入手。毕竟IE的浏览器大多还不支持。</p>
						<p>5、浏览器兼容。懂web标准，熟练手写 xhtml css3 并符合 符合w3c标准。代码能兼容主流浏览器Firfox，Chrome、Safari、IE、Opera。虽然IE6很多都不兼容，但现在还使用的人还是有的。W3C验证地址：http://jigsaw.w3.org/css-validator/ 通过验证指定URI的CSS内容，可以帮我们检查一下有没有错误。</p>
						<p>6、熟悉一门后台编程语言 asp、php、jsp等</p>
						<h4>web前端设计师前景</h4>
						<p>遇到很多想换行的朋友，第一句就问，这行赚钱吗？我相信一句话，没有付出，是没有回报的！前面已经说过了，咱们这行门槛是很低的，所以薪资阶段也不一样。2000初入这行的现在还普遍，工作经验2年以上，有很多代表性作品的时候，工资在4000左右；高手级别的估计在6000左右，大师级别这个阶段的薪资参考：10000以上(上海北京深圳为例)网页设计师课程一般包括：Photoshop、Fireworks、用户界面设计实操，xhtml、css、dreamweaver、网站架构与网站策划、flash动画制作，域名与空间、ftp、dhtml、javascript、动态交互网站(asp、php、aja)</p>
						<hr />
						<p>原文地址：<a href="http://www.yangqq.com/jstt/bj/2013-07-28/530.html">http://www.yangqq.com/jstt/bj/2013-07-28/530.html</a></p>
					</article>
					<!--review-->
					<div class="blog-review">
						<%- include('review.ejs') %>
					</div>
				</div>
				<!-- /.blog-main -->
			</div>
		</div>
		<%- include('footer.ejs') %>
	</body>

</html>